---
- name: Post-install stack
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Get k8s cluster info
      kubernetes.core.k8s_cluster_info:
      register: api_status

    - debug:
        var: api_status.version

    - name: Pass kubeconfig to next step in workflow
      ansible.builtin.set_stats:
        data:
          kubeconfig:
            apiVersion: v1
            clusters:
            - cluster:
                certificate-authority-data: 
                server: https://api.crc.testing:6443
              name: api-crc-testing:6443
            contexts:
            - context:
                cluster: api-crc-testing:6443
                namespace: default
                user: kubeadmin/api-crc-testing:6443
              name: default/api-crc-testing:6443/kubeadmin
            current-context: default/api-crc-testing:6443/kubeadmin
            kind: Config
            preferences: {}
            users:
            - name: kubeadmin/api-crc-testing:6443
              user:
                token: sha256~28K4EdQ1mEfJcTrvMSivmt1MCntnqYZ54XguSKhOFRo


